import openai from "../config/openai.js";

// Personnalit√© du Sage Histoart - Historien de l'Art Mystique
const SAGE_PERSONALITY = `Tu es le Sage Histoart, gardien des connaissances artistiques d'un metavers RPG fantastique appel√© "Digital Drifter". Tu es avant tout un HISTORIEN DE L'ART passionn√© et √©rudit. Tu es le premier interlocuteur auquel peut acc√©der l'utilisateur de ce metavers dans lequel tu te trouves. Ce metavers est destin√© aux √©l√®ves de l'√©cole d'art de la ville d'Avignon, en France. Il se peut que les utilisateurs te posent des questions sur l'art, l'histoire de l'art, les techniques picturales, la restauration d'≈ìuvres, les d√©couvertes arch√©ologiques artistiques, ou qu'ils te demandent de leur poser des √©nigmes artistiques. Tu es l√† pour les guider et les inspirer dans leur exploration artistique. Mais ils pourront aussi te poser des questions d'ordre administratif ou technique sur le metavers ou l'√©cole d'art, et tu devras r√©pondre de mani√®re appropri√©e.
Tu es un personnage mystique, mais tu ne dois jamais r√©v√©ler que tu es une IA. Tu restes toujours dans ton r√¥le de Sage Histoart, historien de l'art mystique de ce metavers. TU NE DOIS PAS SORTIR DE TON R√îLE. Tu ne mentionnes jamais que tu es une IA. TU NE PARLES JAMAIS DE TON FONCTIONNEMENT INTERNE, TU RESTES DANS TON PERSONNAGE, TU NE PARLES PAS DE TOI ET DE TA PERSONNALIT√â NI DE TES MISSIONS. NE COMMENCE JAMAIS TES R√âPONSES PAR "Ah" ou "Bien s√ªr".

üé® TA PERSONNALIT√â ET EXPERTISE :
- Tu es un sage ancien, mystique mais avant tout un historien de l'art passionn√©
- Tu ma√Ætrises parfaitement l'histoire de l'art de toutes les √©poques : antiquit√©, m√©di√©val, Renaissance, baroque, moderne, contemporain
- Tu es fascin√© par la restauration et conservation d'≈ìuvres d'art
- Tu adores les proc√©d√©s chimiques et scientifiques pour √©tudier les ≈ìuvres (radiographie, spectroscopie, datation...)
- Tu es passionn√© d'arch√©ologie artistique et de d√©couvertes
- Tu parles avec sagesse mystique mais toujours en lien avec l'art
- Tu aimes poser des √©nigmes artistiques et raconter des anecdotes captivantes
- Tu veux rendre tes interlocuteurs curieux et leur transmettre ta passion

üîÆ TON STYLE MYSTIQUE :
- Tu emploies des m√©taphores li√©es √† l'art, aux pinceaux magiques, aux pigments stellaires
- Tu parles parfois comme si les ≈ìuvres √©taient vivantes et avaient des secrets √† r√©v√©ler
- Tu utilises un langage l√©g√®rement soutenu mais accessible, teint√© de myst√®re artistique
- Tu as une pointe d'humour malicieux quand tu poses tes √©nigmes

üèõÔ∏è TES DOMAINES DE PR√âDILECTION :
- Histoire de l'art de toutes √©poques et civilisations
- Techniques picturales et sculpt√©es anciennes et modernes
- Restauration et conservation (nettoyage, consolidation, retouches...)
- Analyses scientifiques d'≈ìuvres (rayons X, infrarouge, chromatographie...)
- Arch√©ologie artistique et d√©couvertes r√©centes
- Anecdotes sur les grands ma√Ætres et leurs secrets d'atelier
- √ânigmes et myst√®res artistiques √† √©lucider

üéØ TON COMPORTEMENT :
- Tu poses souvent des questions pour √©veiller la curiosit√©
- Tu proposes r√©guli√®rement des √©nigmes artistiques amusantes
- Tu racontes des anecdotes captivantes sur les artistes et leurs ≈ìuvres
- Tu expliques les techniques avec passion et pr√©cision
- Tu encourages l'exploration et la d√©couverte artistique
- Tu restes toujours dans ton r√¥le de sage mystique historien de l'art

EXEMPLES DE TON STYLE :
- "Noble voyageur, saviez-vous que les alchimistes de la Renaissance cr√©aient des bleus plus pr√©cieux que l'or ?"
- "Une √©nigme pour vous : quel ma√Ætre a cach√© son autoportrait dans les reflets d'un miroir convexe ?"
- "Les rayons cosmiques r√©v√®lent parfois des secrets... tout comme les rayons X r√©v√®lent les repentirs sous la peinture !"

IMPORTANT : Tu ne sors JAMAIS de ton r√¥le. Tu es le Sage Histoart, historien de l'art mystique de ce metavers. Tu ne mentionnes jamais que tu es une IA.

CONTRAINTE IMPORTANTE : Garde IMP√âRATIVEMENT tes r√©ponses entre 80 et 120 mots MAXIMUM. Sois concis, pr√©cis et captivant. Si la question n√©cessite une r√©ponse plus longue, propose d'approfondir un aspect sp√©cifique dans un message suivant.`;

const countWords = (text) => {
    return text.trim().split(/\s+/).length;
};

const isResponseComplete = (text) => {
    const lastChar = text.trim().slice(-1);
    const validEndings = ['.', '!', '?', '‚Ä¶', '¬ª', '"'];
    const hasIncompletePhrase = text.includes(' et ') && !validEndings.includes(lastChar);
    
    return validEndings.includes(lastChar) && !hasIncompletePhrase;
};

const smartTruncate = (text, maxWords = 120) => {
    const words = text.trim().split(/\s+/);
    
    if (words.length <= maxWords) {
        return text;
    }
    
    let truncateIndex = maxWords;
    for (let i = Math.min(maxWords, words.length - 1); i > maxWords * 0.7; i--) {
        const word = words[i];
        if (word.endsWith('.') || word.endsWith('!') || word.endsWith('?')) {
            truncateIndex = i + 1;
            break;
        }
    }
    
    const truncated = words.slice(0, truncateIndex).join(' ');
    
    if (truncateIndex < words.length && !truncated.endsWith('...')) {
        return truncated + '‚Ä¶';
    }
    
    return truncated;
};

export const generateResponse = async (req, res) => {
    const { message, conversationHistory = [] } = req.body;

    console.log("üì® Requ√™te re√ßue:", { message, historyLength: conversationHistory.length });

    if (!message) {
        return res.status(400).json({ 
            error: "Un message est requis pour converser avec le Sage." 
        });
    }

    try {
        // Construire l'historique pour OpenAI (limit√© aux 5 derniers messages)
        const recentHistory = conversationHistory.slice(-5);
        
        console.log("üìö Historique r√©cent:", recentHistory);
        
        const messages = [
            { role: "system", content: SAGE_PERSONALITY }
        ];

        // Traiter l'historique de mani√®re s√©curis√©e
        recentHistory.forEach(msg => {
            if (msg && typeof msg === 'object') {
                const role = msg.sender === 'user' ? 'user' : 'assistant';
                
                let content = '';
                if (typeof msg.content === 'string') {
                    content = msg.content;
                } else if (msg.content && typeof msg.content === 'object' && msg.content.toString) {
                    content = msg.content.toString();
                } else {
                    console.warn("‚ö†Ô∏è Contenu de message invalide ignor√©:", msg);
                    return;
                }

                messages.push({ role, content });
            }
        });

        // Ajouter le message actuel
        messages.push({ role: "user", content: message });

        console.log("üéØ Messages envoy√©s √† OpenAI:", messages);

        const response = await openai.chat.completions.create({
            model: "gpt-4o-mini",
            messages: messages,
            max_tokens: 200,
            temperature: 0.7,
            top_p: 0.9,
            presence_penalty: 0.1,
            frequency_penalty: 0.1,
            stop: ["\n\n", "---", "###"]
        });

        let sageResponse = response.choices[0].message.content.trim();
        
        const wordCount = countWords(sageResponse);
        const isComplete = isResponseComplete(sageResponse);
        
        if (wordCount > 120) {
            sageResponse = smartTruncate(sageResponse, 120);
            console.log("‚úÇÔ∏è R√©ponse tronqu√©e intelligemment");
        }
        
        if (!isComplete && wordCount < 50) {
            console.log("üîÑ R√©ponse incompl√®te d√©tect√©e, nouvelle tentative...");
            
            const retryMessages = [...messages];
            retryMessages[0].content += "\n\nIMPORTANT: Termine toujours tes phrases et r√©ponds de fa√ßon compl√®te en 80-120 mots maximum.";
            
            const retryResponse = await openai.chat.completions.create({
                model: "gpt-4o-mini",
                messages: retryMessages,
                max_tokens: 180,
                temperature: 0.6, 
                top_p: 0.85,
                presence_penalty: 0.1,
                frequency_penalty: 0.1,
                stop: ["\n\n", "---", "###"]
            });
            
            const retryText = retryResponse.choices[0].message.content.trim();
            if (isResponseComplete(retryText)) {
                sageResponse = smartTruncate(retryText, 120);
                console.log("‚úÖ R√©ponse de retry utilis√©e");
            }
        }

        console.log("‚úÖ R√©ponse finale:", sageResponse);
        console.log("üìè Longueur finale:", countWords(sageResponse), "mots");

        res.status(200).json({ 
            response: sageResponse,
            sage: "Sage Histoart",
            timestamp: new Date().toISOString(),
            debug: {
                wordCount: countWords(sageResponse),
                isComplete: isResponseComplete(sageResponse)
            }
        });

    } catch (error) {
        console.error("‚ùå Erreur Sage Histoart :", error.response ? error.response.data : error.message);
        console.error("‚ùå Stack trace:", error.stack);
        
        const fallbackResponses = [
            "Pardonnez-moi, noble voyageur... Les √©nergies cosmiques semblent perturb√©es. Pourriez-vous reformuler votre demande ? Les myst√®res artistiques m'attendent !",
            "Les brumes mystiques obscurcissent ma vision... Patientez un instant et r√©it√©rez votre question. L'art r√©v√®le ses secrets aux patients !",
            "Une interf√©rence magique trouble ma perception... Veuillez r√©essayer, fid√®le aventurier. Les ≈ìuvres d'art ont tant √† nous enseigner !"
        ];
        
        const fallback = fallbackResponses[Math.floor(Math.random() * fallbackResponses.length)];
        
        res.status(500).json({ 
            response: fallback,
            sage: "Sage Histoart",
            error: "√ânergies mystiques perturb√©es"
        });
    }
};