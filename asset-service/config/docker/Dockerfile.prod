# Build stage
FROM node:18-alpine AS builder

WORKDIR /usr/src/app

# Copier les fichiers de configuration
COPY package*.json ./

# Installer les dépendances
RUN npm ci --only=production && npm cache clean --force

# Production stage
FROM node:18-alpine AS production

# Créer un utilisateur non-root pour la sécurité
RUN addgroup -g 1001 -S nodejs && \
    adduser -S appuser -u 1001 -G nodejs

WORKDIR /usr/src/app

# Copier les dépendances depuis le build stage
COPY --from=builder /usr/src/app/node_modules ./node_modules

# Copier le code source
COPY --chown=appuser:nodejs . .

# Créer le dossier uploads avec les bonnes permissions
RUN mkdir -p /usr/src/app/src/uploads && \
    chown -R appuser:nodejs /usr/src/app/src/uploads && \
    chmod -R 755 /usr/src/app/src/uploads

# Installer des outils de sécurité et de monitoring
RUN apk add --no-cache \
    dumb-init \
    curl \
    && rm -rf /var/cache/apk/*

# Changer vers l'utilisateur non-root
USER appuser

# Exposer le port
EXPOSE 4000

# Variables d'environnement pour la production
ENV NODE_ENV=production
ENV PORT=4000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:4000/health || exit 1

# Utiliser dumb-init pour une gestion propre des signaux
ENTRYPOINT ["dumb-init", "--"]

# Commande pour démarrer l'application
CMD ["node", "src/app.js"]