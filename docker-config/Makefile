# Makefile pour DigitalDrifter
.PHONY: help dev prod build-dev build-prod clean logs status

# Variables
COMPOSE_DEV = docker-compose -f docker-compose.dev.yml
COMPOSE_PROD = docker-compose -f docker-compose.prod.yml

help: ## Affiche cette aide
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

# Commandes de d√©veloppement
dev: ## Lance l'environnement de d√©veloppement
	$(COMPOSE_DEV) up -d --build

dev-logs: ## Affiche les logs de d√©veloppement
	$(COMPOSE_DEV) logs -f

dev-stop: ## Arr√™te l'environnement de d√©veloppement
	$(COMPOSE_DEV) down

dev-clean: ## Nettoie l'environnement de d√©veloppement
	$(COMPOSE_DEV) down -v --remove-orphans
	docker system prune -f

# Commandes de production
prod: ## Lance l'environnement de production
	$(COMPOSE_PROD) up -d --build

prod-logs: ## Affiche les logs de production
	$(COMPOSE_PROD) logs -f

prod-stop: ## Arr√™te l'environnement de production
	$(COMPOSE_PROD) down

prod-clean: ## Nettoie l'environnement de production
	$(COMPOSE_PROD) down -v --remove-orphans

# Builds sp√©cifiques
build-dev: ## Build uniquement les images de d√©veloppement
	$(COMPOSE_DEV) build

build-prod: ## Build uniquement les images de production
	$(COMPOSE_PROD) build

build-frontend-dev: ## Build uniquement le frontend de d√©veloppement
	$(COMPOSE_DEV) build frontend-dev

build-frontend-prod: ## Build uniquement le frontend de production
	$(COMPOSE_PROD) build frontend-prod

# Utilitaires
status: ## Affiche le statut des containers
	@echo "=== D√©veloppement ==="
	$(COMPOSE_DEV) ps
	@echo "=== Production ==="
	$(COMPOSE_PROD) ps

clean: ## Nettoie tout (dev + prod)
	$(COMPOSE_DEV) down -v --remove-orphans || true
	$(COMPOSE_PROD) down -v --remove-orphans || true
	docker system prune -f
	docker volume prune -f

shell-frontend-dev: ## Acc√®de au shell du frontend de d√©veloppement
	$(COMPOSE_DEV) exec frontend-dev sh

shell-frontend-prod: ## Acc√®de au shell du frontend de production
	$(COMPOSE_PROD) exec frontend-prod sh

# Tests
test-frontend: ## Lance les tests du frontend
	$(COMPOSE_DEV) exec frontend-dev npm test

lint-frontend: ## Lance le linting du frontend
	$(COMPOSE_DEV) exec frontend-dev npm run lint

# Surveillance
watch-logs: ## Surveille tous les logs en temps r√©el
	$(COMPOSE_DEV) logs -f frontend-dev gateway-service

# Installation initiale
setup: ## Configuration initiale du projet
	@echo "üèóÔ∏è  Configuration initiale..."
	cp .env.example .env || echo "Fichier .env.example non trouv√©"
	$(COMPOSE_DEV) build
	@echo "‚úÖ Configuration termin√©e"
	@echo "üí° Lancez 'make dev' pour d√©marrer le d√©veloppement"